CREATE DATABASE MOOBITOY;
USE MOOBITOY;

CREATE TABLE USUARIOS(
    IDUSUARIO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(30) NOT NULL,
    USUARIO VARCHAR(30) NOT NULL,
    EMAIL VARCHAR(200) NOT NULL,
    TELEFONE VARCHAR(15) NOT NULL,
    SENHA LONGTEXT NOT NULL
);

CREATE TABLE REVENDEDORES(
    IDREVENDEDOR INT AUTO_INCREMENT PRIMARY KEY,
    NOME_REVENDEDOR VARCHAR(100) NOT NULL,
    CNPJ CHAR(14) NOT NULL,
    IDUSUARIO INT 
);



CREATE TABLE PEDIDOS(
    IDPEDIDO INT AUTO_INCREMENT PRIMARY KEY,
    DATA_PEDIDO DATE NOT NULL,
    FORMA_PAGAMENTO ENUM('CREDITO', 'DEBITO', 'BOLETO') NOT NULL,
    VALOR_TOTAL_VENDA FLOAT(10,2) NOT NULL,
    PARCELAS INT NOT NULL,
    VALOR_PARCELAS FLOAT(10,2) NOT NULL,
    IDUSUARIO INT   
);



CREATE TABLE PRODUTOS(
    IDPRODUTO INT AUTO_INCREMENT PRIMARY KEY,
    NOME VARCHAR(100) NOT NULL,
    PRECO FLOAT(10, 2) NOT NULL,
    DESCRICAO TEXT NOT NULL,
    IDREVENDEDOR INT,
    IDCATEGORIA INT
);

CREATE TABLE PRODUTOS_PEDIDOS(
    IDPRODUTO_PEDIDO INT AUTO_INCREMENT PRIMARY KEY,
    IDPEDIDO INT,
    IDPRODUTO INT,
    QUANTIDADE INT
);



CREATE TABLE CATEGORIAS(
    IDCATEGORIA INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORIA ENUM('BONECO', 'BONECA', 'CARRINHOS')
);

CREATE TABLE ENTRADAS(
    IDENTRADA INT AUTO_INCREMENT PRIMARY KEY,
    IDPRODUTO INT,
    QUANTIDADE_PRODUTO INT
);

CREATE TABLE STATUS_PRODUTOS(
    IDSTATUS INT AUTO_INCREMENT PRIMARY KEY,
    ESTADO CHAR(1) NOT NULL, 
    IDPRODUTO INT
);
ALTER TABLE STATUS_PRODUTOS ADD CONSTRAINT FK_STATUS_PRODUTOS_PRODUTOS 
FOREIGN KEY(IDPRODUTO) REFERENCES PRODUTOS(IDPRODUTO) ON DELETE CASCADE;

ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS_USUARIOS
FOREIGN KEY(IDUSUARIO) REFERENCES USUARIOS(IDUSUARIO);

ALTER TABLE REVENDEDORES ADD CONSTRAINT FK_REVENDEDORES_USUARIOS
FOREIGN KEY(IDUSUARIO) REFERENCES USUARIOS(IDUSUARIO);

ALTER TABLE PRODUTOS ADD CONSTRAINT FK_PRODUTOS_REVENDEDORES
FOREIGN KEY(IDREVENDEDOR) REFERENCES REVENDEDORES(IDREVENDEDOR);

ALTER TABLE PRODUTOS ADD CONSTRAINT FK_PRODUTOS_CATEGORIAS
FOREIGN KEY(IDCATEGORIA) REFERENCES CATEGORIAS(IDCATEGORIA);


ALTER TABLE PRODUTOS_PEDIDOS ADD CONSTRAINT FK_PRODUTOS_PEDIDOS_PEDIDOS
FOREIGN KEY(IDPEDIDO) REFERENCES PEDIDOS(IDPEDIDO);

ALTER TABLE PRODUTOS_PEDIDOS ADD CONSTRAINT FK_PRODUTOS_PEDIDOS_PRODUTOS
FOREIGN KEY(IDPRODUTO) REFERENCES PRODUTOS(IDPRODUTO);

ALTER TABLE ENTRADAS ADD CONSTRAINT FK_ENTRADAS_PRODUTOS
FOREIGN KEY(IDPRODUTO) REFERENCES PRODUTOS(IDPRODUTO) ON DELETE CASCADE;



/*---------------------------FAZER ESSES INSERTS ANTES DE COMEÇAR A TESTAR O SISTEMA -------------------*/
/*CATEGORIA PRODUTO*/
INSERT INTO CATEGORIAS(CATEGORIA) VALUES ('BONECO');
INSERT INTO CATEGORIAS(CATEGORIA) VALUES ('BONECA');
INSERT INTO CATEGORIAS(CATEGORIA) VALUES ('CARRINHOS');
/*CATEGORIA PRODUTO*/



/*QURIES QUE DESENVOLVI AO DECORRER DO PROJETO*/
/*1)LISTE TODOS OS REVENDEDORES*/
SELECT U.NOME AS "REVENDEDOR", R.CNPJ FROM USUARIOS U 
INNER JOIN REVENDEDORES R 
ON U.IDUSUARIO = R.IDUSUARIO;


/*BUSCANDO USUARIO QUE SEJA REVENDEDOR*/
SELECT R.IDUSUARIO
       FROM USUARIOS U 
       INNER JOIN REVENDEDORES R 
       ON (U.IDUSUARIO = 7) AND (R.IDUSUARIO = 7);

/*BUSCANDO REVENDEDOR ESPECIFICO*/
SELECT R.IDREVENDEDOR FROM REVENDEDORES R 
INNER JOIN USUARIOS U 
ON (U.IDUSUARIO = 2) AND(R.IDUSUARIO = 2);

/*2)NOME DO REVENDEDOR, CNPJ, QUANTIDADE DE PRODUTOS QUE ELE TEM , SUA CATEGORIA E PREÇO UBNITARIO*/
SELECT U.NOME AS "REVENDEDOR",
       R.CNPJ,
       P.NOME AS "PRODUTO",
       P.PRECO AS "PREÇO",
       P.DESCRICAO,
       C.CATEGORIA,
       E.QUANTIDADE_PRODUTO AS "PRODUTO EM ESTOQUE"
FROM USUARIOS U 
INNER JOIN REVENDEDORES R 
ON R.IDUSUARIO = U.IDUSUARIO
INNER JOIN PRODUTOS P
ON P.IDREVENDEDOR = R.IDREVENDEDOR
INNER JOIN CATEGORIAS C 
ON C.IDCATEGORIA = P.IDCATEGORIA
INNER JOIN ENTRADAS E 
ON E.IDPRODUTO = P.IDPRODUTO;

/*3) BUSCANDO UM PRODUTO ESPECIFICO, SEU REVENDEDOR E SUA CATEGORIA*/
SELECT P.NOME,
       P.PRECO,
       P.DESCRICAO,
       R.IDREVENDEDOR     
       FROM PRODUTOS P
       INNER JOIN REVENDEDORES R 
       ON  P.IDREVENDEDOR = 1 AND ;

SELECT IDREVENDEDOR,
       NOME,
       PRECO
 FROM PRODUTOS 
WHERE IDPRODUTO = 1;


/*INFORMAÇÕES COMPLETAS SOBRE OS PRODUTO*/
SELECT  P.IDREVENDEDOR,
        R.IDUSUARIO,
        U.NOME AS 'REVENDEDOR',
        P.IDPRODUTO,
        P.NOME,
        P.PRECO,
        P.DESCRICAO,
        C.CATEGORIA,
        E.QUANTIDADE_PRODUTO AS 'ESTOQUE',
        S.ESTADO AS 'ESTADO_INICIAL'
        FROM PRODUTOS P 
        INNER JOIN REVENDEDORES R 
        ON P.IDREVENDEDOR = R.IDREVENDEDOR
        INNER JOIN USUARIOS U 
        ON U.IDUSUARIO = R.IDUSUARIO
        INNER JOIN CATEGORIAS C 
        ON C.IDCATEGORIA = P.IDCATEGORIA
        INNER JOIN ENTRADAS E 
        ON E.IDPRODUTO = P.IDPRODUTO
        INNER JOIN STATUS_PRODUTOS S 
        ON S.IDPRODUTO = P.IDPRODUTO; 

/*INFORMAÇÕES COMPLETAS DE UM UNICO PRODUTO*/
SELECT P.IDREVENDEDOR,
       R.IDUSUARIO,
       U.NOME AS 'REVENDEDOR',
       P.NOME,
       P.PRECO,
       P.DESCRICAO,
       C.CATEGORIA,
       E.QUANTIDADE_PRODUTO AS 'ESTOQUE'
       FROM PRODUTOS P
       INNER JOIN REVENDEDORES R 
       ON R.IDREVENDEDOR = P.IDREVENDEDOR AND IDPRODUTO = 6
       INNER JOIN USUARIOS U 
       ON U.IDUSUARIO = R.IDUSUARIO
       INNER JOIN CATEGORIAS C 
       ON C.IDCATEGORIA = P.IDCATEGORIA
       INNER JOIN ENTRADAS E 
       ON E.IDPRODUTO = P.IDPRODUTO;

/*4) BUSCAR ID DO PEDIDO, DATA, FORMA DE PAGAMENTO, VALOR TOTAL, PARCELAS, VALOR DAS PARCELAS
QUEM COMPROU, O REVENDEDOR, O PRODUTO E A QUANTIDADE QUE FOI SOLICITADA*/
SELECT U.NOME AS 'COMPRADOR',  
                Q.NOME AS 'PRODUTO',
                C.CATEGORIA,    
                P.IDPEDIDO AS 'CODIGO_PEDIDO',
                P.DATA_PEDIDO AS 'DATA',
                P.FORMA_PAGAMENTO,
                W.QUANTIDADE,
                P.VALOR_TOTAL_VENDA AS 'VALOR_TOTAL',
                P.PARCELAS AS 'QNT_PARCELAS',
                P.VALOR_PARCELAS, 
                R.NOME_REVENDEDOR AS 'REVENDEDOR'             
            FROM PEDIDOS P
            INNER JOIN USUARIOS U             
            ON U.IDUSUARIO = 2 AND P.IDUSUARIO = 2 
            INNER JOIN CATEGORIAS C
            INNER JOIN PRODUTOS Q
            ON C.IDCATEGORIA = Q.IDCATEGORIA
            INNER JOIN PRODUTOS_PEDIDOS W 
            ON W.IDPEDIDO = P.IDPEDIDO
            INNER JOIN REVENDEDORES R 
            ON Q.IDREVENDEDOR = R.IDREVENDEDOR  AND Q.IDPRODUTO = W.IDPRODUTO;


/*5)ATUALIZANDO A TABELA PRODUTOS E A TABELA ENTRADAS (QUANTIDADE_PRODUTO)*/
UPDATE PRODUTOS SET NOME = :n,
                SET PRECO = :p,
                SET DESCRICAO = :d,
                WHERE IDPRODUTO = :id;

UPDATE ENTRADAS SET QUANTIDADE_PRODUTO = :q 
                WHERE IDPRODUTO = :id;

  
  
/*6) DELETANDO PRODUTO*/
DELETE FROM PRODUTOS WHERE IDPRODUTO = :id;

/*7) ATUALIZANDO ESTADO PARA 1 (DESATIVADO)*/
UPDATE STATUS_PRODUTOS SET ESTADO = '1' WHERE IDPRODUTO = :id;
/*8) ATUALIZANDO QUANTIDADE DO PRODUTO EM ESTOQUE*/
UPDATE ENTRADAS SET QUANTIDADE_PRODUTO
WHERE IDPRODUTO = :id;
/*BUSCANDO POR UM VALOR ESPECIFICO*/
SELECT  P.IDREVENDEDOR,
                    R.IDUSUARIO,
                    U.NOME AS 'REVENDEDOR',
                    P.IDPRODUTO,
                    P.NOME,
                    P.PRECO,
                    P.DESCRICAO,
                    C.CATEGORIA,
                    E.QUANTIDADE_PRODUTO AS 'ESTOQUE',
                    S.ESTADO
                    FROM PRODUTOS P 
                    INNER JOIN REVENDEDORES R 
                    ON P.IDREVENDEDOR = R.IDREVENDEDOR
                    INNER JOIN USUARIOS U 
                    ON U.IDUSUARIO = R.IDUSUARIO
                    INNER JOIN CATEGORIAS C 
                    ON C.IDCATEGORIA = P.IDCATEGORIA
                    INNER JOIN ENTRADAS E 
                    ON E.IDPRODUTO = P.IDPRODUTO
                    INNER JOIN STATUS_PRODUTOS S 
                    ON S.IDPRODUTO = P.IDPRODUTO
                    WHERE P.NOME LIKE '%Homem%';

/*BUSCANDO TELEFONE E EMAIL DE DETERMINADO CLIENTE*/
SELECT TELEFONE, EMAIL FROM USUARIOS 
WHERE IDUSUARIO = 2;